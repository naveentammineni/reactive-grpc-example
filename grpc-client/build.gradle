buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
		maven { url 'https://repo.spring.io/libs-milestone' }
	}
	dependencies {
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
	id 'idea'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.7.1"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
	generatedFilesBaseDir = "$projectDir/src/main/generated"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.grpc:grpc-netty-shaded:1.21.0'
	implementation 'io.grpc:grpc-protobuf:1.21.0'
	implementation 'io.grpc:grpc-stub:1.21.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

bootJar {
	mainClassName = "com.example.grpc.SpringBootApp"
	archiveClassifier.set('runnable')
	archiveFileName = archiveBaseName.get() + '-' + archiveClassifier.get() + '.jar'
	manifest {
		attributes("Implementation-Title": archiveBaseName.get())
	}
}

jar {
	enabled = true
	manifest {
		attributes("Implementation-Title": archiveBaseName.get())
	}
}

idea {
	module {
		sourceDirs += file("src/main/generated")
		generatedSourceDirs += file("src/main/generated")
	}
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}